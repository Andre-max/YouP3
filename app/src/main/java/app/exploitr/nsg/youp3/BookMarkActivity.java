package app.exploitr.nsg.youp3;

import android.content.Context;
import android.content.DialogInterface;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.os.VibrationEffect;
import android.os.Vibrator;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.List;

import Book.BookMark;
import Book.BookMarkAdapter;
import Book.BookMarkManager;
import Book.BookRealmController;
import Book.Launcher;
import Book.SimpleDivider;
import utils.DataStore;

public class BookMarkActivity extends AppCompatActivity {

    TextView noBook;
    RecyclerView books;
    BookMarkAdapter adapter;
    Handler handler;
    Runnable runnable;
    Snackbar bar;

    //FIXME : Differently introduce people to my features
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_book_mark);

        books = findViewById(R.id.bookedItems);
        noBook = findViewById(R.id.noBookText);

        books.setLayoutManager(new LinearLayoutManager(BookMarkActivity.this));
        books.addItemDecoration(new SimpleDivider(BookMarkActivity.this));

        List<String> dex = getInfoInArrayList();
        adapter = new BookMarkAdapter(BookMarkActivity.this, dex);

        adapter.setClickListener(new BookMarkAdapter.ItemClickListener() {
            @Override
            public void onOpenClick(String url) {
                Launcher.i().setUrl(url);
                Launcher.i().setShouldLoad(true);
                finish();
            }
        });

        adapter.setLongClickListener(new BookMarkAdapter.ItemLongClickListener() {
            @Override
            public void onDeleteClick(final int id) {
                Vibrator v = (Vibrator) getSystemService(Context.VIBRATOR_SERVICE);
                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
                    if (v != null) {
                        v.vibrate(VibrationEffect.createOneShot(500, VibrationEffect.DEFAULT_AMPLITUDE));
                    }
                } else {
                    if (v != null) {
                        v.vibrate(500);
                    }
                }
                final String book = new BookMarkManager().getTitleById(id);
                new AlertDialog.Builder(BookMarkActivity.this)
                        .setTitle("Remove BookMark")
                        .setMessage("Remove " + book + "?")
                        .setNegativeButton("Nope", null)
                        .setPositiveButton("Ya", new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                new BookMarkManager().removeInfoById(id);
                                adapter.notifyDataSetChangedCustom(getInfoInArrayList());
                            }
                        }).show();
            }
        });

        books.setAdapter(adapter);
        adapter.notifyDataSetChanged();

        handler = new Handler(Looper.getMainLooper());
        runnable = new Runnable() {
            @Override
            public void run() {
                if (getSupportActionBar() != null) {
                    getSupportActionBar().setTitle("BookMarks (" + new BookMarkManager().getTotalInfoCount() + ")");
                }

                if (new BookMarkManager().getTotalInfoCount() == 0) {
                    books.setVisibility(View.GONE);
                    noBook.setVisibility(View.VISIBLE);
                } else {
                    books.setVisibility(View.VISIBLE);
                    noBook.setVisibility(View.GONE);
                }
                handler.postDelayed(runnable, 100);
            }
        };
        handler.post(runnable);

        if (DataStore.getInstance(getBaseContext()).isNewUser()) {
            bar = Snackbar.make(getWindow().getDecorView(), "Single Press To Open , Long Press To Remove", Snackbar.LENGTH_INDEFINITE)
                    .setAction("Understand", new View.OnClickListener() {
                        @Override
                        public void onClick(View v) {
                            bar.dismiss();
                        }
                    });
            bar.show();
            DataStore.getInstance(getBaseContext()).setNewUserNoMore();
            //TODO manager separate fucks
        }
    }

    private ArrayList<String> getInfoInArrayList() {
        ArrayList<String> all = new ArrayList<>();
        for (BookMark info : new BookRealmController().getBookMarks()) {
            all.add(info.getId() + "," + info.getTitle() + "," + info.getUrl() + "," + info.getFavicon());
        }
        return all;
    }

    @Override
    protected void onDestroy() {
        handler.removeCallbacks(runnable);
        super.onDestroy();
    }

}
